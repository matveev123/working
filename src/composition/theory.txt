Эти отношения являются IS-A(наследование) и HAS-A (Ассоциация). 
В то время как между классами IS-A существует тесная связь, классы HAS-A слабо связаны и более предпочтительны для программистов.
Отношение IS-A означает, что один объект является типом другого. Он реализуется с помощью ключевых слов «расширяет» и «реализует».
A ИМЕЕТ(HAS-A) отношение означает, что класс имеет отношение с другим классом. 
Например, класс A содержит ссылку на класс B и может получить доступ ко всем свойствам класса B.

Связь Has-A или ассоциация можно разделить на агрегацию и композицию. Класс контейнера агрегации и класс, на который ссылаются, могут существовать независимо друг от друга. 
Ссылочный класс композиции не может существовать, если класс-контейнер уничтожен.
Давайте рассмотрим пример, чтобы понять агрегацию и композицию. Автомобиль состоит из частей, например, двигателей, колес, музыкального проигрывателя и т. д. 
Автомобиль не может функционировать без двигателя и колес, но может функционировать без музыкального проигрывателя.

Композиция в Java между двумя объектами, связанными друг с другом, существует, когда существует сильная связь между одним классом и другим. 
Другие классы не могут существовать без владельца или родительского класса. 
Например, класс «Человек» представляет собой сочетание Сердца и легких. Когда человеческий объект умирает, умирают и легкие с сердцем.

В языках можно добиться «множественного наследования», объединив несколько объектов в один.
	Композиция гибкая, вы можете изменить реализацию класса во время выполнения, изменив включенный объект и изменив его поведение.
Bussines
		Departmens
				Employes
				
Library
		Books
		